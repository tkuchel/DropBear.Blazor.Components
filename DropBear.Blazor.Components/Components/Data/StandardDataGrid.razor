@inherits ComponentBase
@namespace DropBear.Blazor.Components.Components.Data
@typeparam TItem where TItem : notnull

<div class="standard-datagrid @(IsLightMode ? "theme-light" : "theme-dark")">
    <div class="standard-datagrid-header">
        <h2 class="standard-datagrid-title">
            <i class="@HeaderIcon"></i> @Title
        </h2>
        <div class="standard-datagrid-actions">
            @if (AllowSearch)
            {
                <div class="standard-search-wrapper">
                    <input type="text" placeholder="Search..." class="standard-search-input" @bind-value="SearchTerm" @bind-value:event="oninput">
                    <i class="fas fa-search standard-search-icon"></i>
                </div>
            }
            @if (AllowAdd)
            {
                <button class="standard-btn standard-btn-primary" @onclick="OnAddClick">
                    <i class="fas fa-plus"></i> @AddText
                </button>
            }
        </div>
    </div>
    <div class="standard-datagrid-table-wrapper">
        @if (IsLoading)
        {
            @if (LoadingTemplate != null)
            {
                @LoadingTemplate
            }
            else
            {
                <div class="standard-datagrid-loading">
                    <i class="fas fa-spinner fa-spin"></i> Loading...
                </div>
            }
        }
        else if (Items == null || !FilteredAndSortedItems.Any())
        {
            @if (EmptyTemplate != null)
            {
                @EmptyTemplate
            }
            else
            {
                <div class="standard-datagrid-empty">
                    <i class="fas fa-inbox fa-3x"></i>
                    <p>No items to display.</p>
                </div>
            }
        }
        else
        {
            <div class="standard-datagrid-table" role="table" aria-label="@Title">
                <div class="standard-datagrid-row header" role="row">
                    @if (AllowSelect)
                    {
                        <div class="standard-datagrid-cell checkbox" role="columnheader">
                            <input type="checkbox" @bind="AreAllSelected" aria-label="Select all items">
                        </div>
                    }
                    @foreach (var column in Columns!)
                    {
                        <div class="standard-datagrid-cell sortable" role="columnheader" aria-sort="@GetSortOrder(column)" @onclick="() => SortByColumn(column)">
                            <i class="@column.IconClass"></i> @column.Title <i class="fas fa-sort standard-datagrid-sort-icon"></i>
                        </div>
                    }
                    @if (AllowEdit || AllowDelete)
                    {
                        <div class="standard-datagrid-cell" role="columnheader">Actions</div>
                    }
                </div>
                @foreach (var item in FilteredAndSortedItems)
                {
                    <div class="standard-datagrid-row @(SelectedItems.Contains(item) ? "selected" : "")"
                         role="row"
                         @oncontextmenu="@(e => ShowContextMenu(e, item))"
                         @oncontextmenu:preventDefault>
                        @if (AllowSelect)
                        {
                            <div class="standard-datagrid-cell checkbox" role="cell">
                                <input type="checkbox"
                                       checked="@IsItemSelected(item)"
                                       @onchange="@(e => ToggleItemSelection(item))"
                                       aria-label="Select item">
                            </div>
                        }
                        @foreach (var column in Columns)
                        {
                            <div class="standard-datagrid-cell" role="cell">
                                @if (column.CellTemplate != null)
                                {
                                    @column.CellTemplate(item)
                                }
                                else
                                {
                                    @column.ValueGetter(item)
                                }
                            </div>
                        }
                        @if (AllowEdit || AllowDelete)
                        {
                            <div class="standard-datagrid-cell actions" role="cell">
                                @if (AllowEdit)
                                {
                                    <button class="standard-btn btn-icon" title="Edit" aria-label="Edit item" @onclick="() => OnEditClick.InvokeAsync(item)">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                }
                                @if (AllowDelete)
                                {
                                    <button class="standard-btn btn-icon" title="Delete" aria-label="Delete item" @onclick="() => OnDeleteClick.InvokeAsync(item)">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
    @if (TotalPages > 1)
    {
        <div class="standard-datagrid-footer">
            <div class="standard-pagination">
                <button class="standard-btn btn-icon" title="Previous Page" aria-label="Go to previous page" @onclick="PreviousPage" disabled="@(!CanGoToPreviousPage)">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <span>Page @CurrentPage of @TotalPages</span>
                <button class="standard-btn btn-icon" title="Next Page" aria-label="Go to next page" @onclick="NextPage" disabled="@(!CanGoToNextPage)">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
            <div class="standard-items-per-page">
                <label for="itemsPerPage">Items per page:</label>
                <select id="itemsPerPage" @bind="ItemsPerPage">
                    <option>10</option>
                    <option>25</option>
                    <option>50</option>
                    <option>100</option>
                </select>
            </div>
        </div>
    }
    <StandardContextMenu @ref="ContextMenu"
                         MenuItems="@ContextMenuItems"
                         OnMenuItemClick="@HandleContextMenuItemClick"
                         IsLightMode="@IsLightMode" />
</div>
